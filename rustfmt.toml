# Run rustfmt with this config (it should be picked up automatically).
version = "Two"
color = "Always"
# 元组模式匹配的时候允许使用 `..` 来匹配剩余元素
condense_wildcard_suffixes = true
edition = "2021"
empty_item_single_line = true
fn_single_line = false
# 当使用 extern 指定外部函数时，不需要显式指定 C-ABI ，默认就是 C-ABI
force_explicit_abi = false
format_code_in_doc_comments = true
# format_macro_matchers 规则说明
# 声明宏 模式匹配分支（=> 左侧）中要使用紧凑格式
# 默认声明宏分支代码体（=> 右侧） 使用宽松格式
format_macro_matchers=true 
# StdExternalCrate 导入模块分组规则
# 1. 导入来自 std、core 和 alloc 的模块需要置于前面一组。
# 2. 导入来自 第三方库的模块 应该置于中间一组。
# 3. 导入来自本地 self、super和crate前缀的模块，置于后面一组。
group_imports="StdExternalCrate" 
# 自动将同一个 crate 的模块导入合并到一起
imports_granularity = "Crate"
imports_layout = "HorizontalVertical"
# 将 /**/ 注释转为 //
normalize_comments = true
remove_nested_parens = true
reorder_impl_items = true
reorder_imports = true
reorder_modules = true
struct_field_align_threshold = 30
tab_spaces = 2
trailing_comma = "Vertical"
unstable_features = true
use_field_init_shorthand = true
use_try_shorthand = true
# 指定一行注释允许的最大宽度
comment_width=100
# wrap_comments 配合 comment_width 使用，自动将一行超过宽带限制的注释切分为多行注释
wrap_comments = true
# 在match分支中，如果包含了块，也需要加逗号以示分隔
match_block_trailing_comma=true
# 会报告注释中的 FIXIME
report_fixme="Unnumbered"
# struct_lit_width = 54